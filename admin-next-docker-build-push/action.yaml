name: "Docker build"
description: "Builds the Docker image."

inputs:
  ghcr-token:
    description: Token of current GitHub account in GitHub container registry.
    required: false
    default: ""
  dockerhub-user:
    description: "User name for the DockerHub account"
    required: false
    default: ""
  dockerhub-token:
    description: Token for the DockerHub account
    required: false
    default: ""
  push:
    description: Should push the docker image or not.
    required: false
    default: "false"
  image-name:
    description: The basic name of docker.
    required: false
    default: "admin"

runs:
  using: "composite"
  steps:
    - name: Environment Set Up
      uses: halo-sigs/actions/admin-env-setup@main
    - name: Build Package
      shell: bash
      run: |
        pnpm install
        pnpm build:packages
        pnpm build
    - name: DockerHub image
      id: dockerhub-image
      shell: bash
      run: |
        if [ -z ${{ inputs.dockerhub-user }} ]
        then
          echo '::set-output name=docker_image::'
        else
          echo '::set-output name=docker_image::halohub/${{ inputs.image-name }}'
        fi
    - name: Docker meta for Halo admin
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: |
          ghcr.io/${{ github.repository_owner }}/${{ inputs.image-name }}
          ${{ steps.dockerhub-image.outputs.docker_image }}
        tags: |
          type=schedule,pattern=nightly-{{date 'YYYYMMDD'}},enabled=${{ github.event_name == 'schedule' }}
          type=ref,event=branch,enabled=${{ github.event_name == 'push' }}
          type=semver,pattern={{ version }}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,enabled=${{ github.event_name == 'push' }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to GHCR
      uses: docker/login-action@v2
      if: inputs.ghcr-token != '' && github.event_name != 'pull_request'
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ inputs.ghcr-token }}
    - name: Login to DockerHub
      if: inputs.dockerhub-token != '' && github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        username: ${{ inputs.dockerhub-user }}
        password: ${{ inputs.dockerhub-token }}
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64,linux/arm/v7,linux/arm64
        labels: ${{ steps.meta.outputs.labels }}
        tags: ${{ steps.meta.outputs.tags }}
        push: ${{ (inputs.ghcr-token != '' || inputs.dockerhub-token != '') && inputs.push == 'true' }}
